#include <iostream>
using namespace std;

struct node {
	int elem;
	node* next;
	node* prev;
};
class linklist {
public:
	linklist();
	~linklist();
	node* head;
	node* tail;
	int size;
	void insertHead(int num);
	void insertTail(int num);
	void print();
	int deleteHead();
	int deleteTail();
};

linklist::linklist() {
	head = NULL;
	tail = NULL;
	size = 0;
}

linklist::~linklist() {
	node* cur = head;
	if (cur == NULL) {
		return;
	}
	node* curNext = head->next;
	while (curNext != NULL) {
		delete(cur);
		cur = curNext;
		curNext = cur->next;
	}
	delete(cur);
}

void linklist::insertHead(int num) {
	node* tmp = new node();
	tmp->elem = num;
	if (size == 0) {
		head = tail = tmp;
	}
	else {
		tmp->next = head;
		head->prev = tmp;
		head = tmp;
	}
	size++;
}

void linklist::insertTail(int num) {
	node* tmp = new node();
	tmp->elem = num;
	if (size == 0) {
		head = tail = tmp;
	}
	else {
		tail->next = tmp;
		tmp->prev = tail;
		tail = tmp;
	}
	size++;
}

int linklist::deleteHead() {
	int returnnum;
	if (size == 0) {
		cout << "비었" << endl;
		return -1;
	}
	else if (size == 1) {
		returnnum = head->elem;
		delete(head);
		head = tail = NULL;
	}
	else {
		returnnum = head->elem;
		node* target = head;
		head = head->next;
		delete(target);
		head->prev = NULL;
	}
	size--;
	return returnnum;
}

int linklist::deleteTail() {
	int returnnum;
	if (size == 0) {
		cout << "비었" << endl;
		return -1;
	}
	else if (size == 1) {
		returnnum = head->elem;
		delete(head);
		head = tail = NULL;
	}
	else {
		returnnum = tail->elem;
		node* target = tail;
		tail = tail->prev;
		delete(target);
		tail->next = NULL;
	}
	size--;
	return returnnum;
}
void linklist::print() {
	cout << "print : ";
	for (node* tmp = head; tmp != NULL; tmp = tmp->next) {
		cout << tmp->elem << " ";
	}
	cout << endl;
}

int main() {
#ifdef _CONSOLE
	freopen("input.txt", "r", stdin);
#endif
	linklist li;
	for (int i = 1; i <= 10; i++)
	{
		li.insertHead(i);
		li.print();
	}
	for (int i = 1; i <= 10; i++)
	{
		li.insertTail(i);
		li.print();
	}
	for (int i = 1; i <= 10; i++)
	{
		cout << li.deleteTail() << endl;
	}
	li.print();
}
